{
  "articles": [
    {
      "path": "01_solutions_controller.html",
      "title": "Solutions for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Set up the RStudio Project\r\nSolution\r\n2 First document and text\r\n\r\nSolution\r\n3 Add R code\r\n\r\nSolution\r\n4 Change YAML header\r\n\r\nSolution\r\n\r\n\r\n\r\n\r\n1 Set up the RStudio Project\r\nSolution\r\nThis is a solution\r\n\r\n[1] 2\r\n\r\n\r\n\r\n[1] FALSE\r\n\r\n2 First document and text\r\nSolution\r\nThis is a solution\r\n\r\n[1] 2\r\n\r\n\r\n\r\n[1] FALSE\r\n\r\n3 Add R code\r\nSolution\r\nThis is a solution\r\n\r\n[1] 2\r\n\r\n\r\n\r\n[1] FALSE\r\n\r\n4 Change YAML header\r\nSolution\r\nThis is a solution\r\n\r\n[1] 2\r\n\r\n\r\n\r\n[1] FALSE\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:48+02:00"
    },
    {
      "path": "01_tasks_controller.html",
      "title": "Tasks for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Set up the RStudio Project\r\n1.1 Download RStudio project\r\n1.2 Add an .Rmd document from a template\r\n\r\n2 First document and text\r\n1.1 Getting started\r\n1.2 Create first rmarkdown document\r\n1.2 Write some markdown text\r\nHints are missing for the links and so on\r\n\r\n3 Add R code\r\n2.1 Load the package\r\n2.1 Adding R code\r\nFigure\r\nSummary table\r\nSome statistics\r\n\r\n2.1 Inline code\r\n2.3 Chunk options\r\n\r\n4 Change YAML header\r\n\r\n1 Set up the RStudio Project\r\n1.1 Download RStudio project\r\nDownload the RStudio project that I created for this workshop from here. Save it in a convenient location on your machine, and open it in RStudio by double clicking on the .Rproj file.\r\nIn the project, you can find some demo documents and presentations, that summarize some of the useful things that you can do with Rmarkdown. You can look through them later if you want and use them for reference.\r\nRead the README file to get more information.\r\n1.2 Add an .Rmd document from a template\r\nCreate a new rmarkdown document and save it in the docs folder of the project\r\nKnit the document to different output versions, trying both the keyboard shortcut and the knit button\r\nCompare the output of the rendered document with the rmarkdown\r\nCan you understand what happened in the different sections (YAML header, code chunks, markdown text)\r\n\r\nExtras\r\nIf you still have a few minutes try changeing things in the code/text/header, render the document again and see what happens\r\n\r\n2 First document and text\r\n1.1 Getting started\r\nTo practice, we will write a document that contains the analysis of a data set on 3 species of penguins on islands in Antarctica. The document will start small, and we will incorporate more functionality during the workshop.\r\nArtwork by [@AllisonHorst](https://twitter.com/allison_horst)The data is available from the palmerpenguins package. To get it, you have to:\r\nInstall the package with install.packages(“palmerpenguins”)\r\nLoad the package into your R session with library(palmerpenguins) (just do this in the console)\r\nTake a moment to get familiar with the data set and its variables:\r\nJust type penguins in the console and you should see the penguins tibble\r\nIt contains data on bill and flipper size, weight and sex of 3 penguin\r\nWe will need the data later.\r\nFor all tasks of today, you might find it helpful, to open the Rmarkdown cheat sheet on the side for reference.\r\n1.2 Create first rmarkdown document\r\nCreate a new .Rmd document using the standard template from the rmarkdown package. For now, chose HTML as default output format.\r\nSave the document in the /docs folder of your project.\r\nBefore you start working with the document:\r\nKnit the document using different options and see what happens\r\nTry the knit button or the keyboard shortcut Ctrl/Cmd + Shift + K\r\nChose different output formats to knit to by clicking on the little black arrow next to the knit button\r\n\r\n1.2 Write some markdown text\r\nNow we start our own document by adding some text about the penguins. Remove all the template text from the document except the YAML header and the first code chunk (we will learn later what that does).\r\nBefore you start writing, have a look at this document. It was created with rmarkdown.\r\nTry to identify the markdown formatting elements that were used to produce the text.\r\nNow write a text yourself. If you want, you can take my example text and reproduce it. But of course, you can also write your own text. The important thing in this task is to include many different markdown formatting elements.\r\nDuring the writing process, don’t forget to knit your document often. It’s easier to fix mistakes and error messages if you detect them early.\r\nHints are missing for the links and so on\r\nMabe tab with hints and the text, instead of a link to another page?\r\n\r\n3 Add R code\r\n2.1 Load the package\r\nWe will now write R code in the penguin document that analyses and plots the data from the palmerpenguins package. As with “normal” R code, you also need to load the package in your document in the beginning.\r\nYou can do this in the setup code chunk.\r\nJust add library(palmerpenguins) as a line in the chunk.\r\nYou can always come back to the setup chunk and add the packages that you need in your analysis. Then you have all the library() calls in one place.\r\n2.1 Adding R code\r\nNow let’s add some R code that produces different types of output to the document.\r\nTry using both the RStudio interface (Code -> Insert Chunk) and the keyboard shortcut (Ctrl/Cmd + Alt/Option + I) to insert the code chunks.\r\nRemember that every time, you use a function from a package, you have to load the package into the document environment. Just add another library() line to the setup chunk.\r\nThe different output types we will try are:\r\nA figure for the penguin data set\r\nA summary table of the data set\r\nSome statics using the penguin data set\r\nFor each of the three output types, go through the following steps:\r\nSelect a location in your document, where you want the output to be.\r\nInsert a new code chunk at the location\r\nWrite the code that produces the output (or copy from my examples below)\r\nRun the code inside the document (Clicking on the little green arrow button next to the code chunk)\r\nKnit the document and see how the output looks like\r\nBelow, you find example code for each of the three output types. I suggest, you copy the code to your respective chunk in the first step. Then if you still have time, you can also change the code or write code yourself.\r\nFigure\r\nI use ggplot to produce the figure, so don’t forget to load the package in the setup chunk.\r\nChose one of the two figure ideas from below:\r\nCreate a histogram of the flipper length for the 3 penguin species\r\n\r\n\r\n\r\nCreate a scatter plot of the relationship between bill length and bill depth\r\n\r\n\r\n\r\nSummary table\r\nAdd a summary table that shows the mean variable values grouped by penguin species and sex.\r\nI use the dplyr package here, so don’t forget to load it in the setup chunk.\r\n\r\n\r\n\r\nSome statistics\r\nI used a Wilcoxon rank sum test, to compare the flipper length of male and female penguins:\r\n\r\n\r\n\r\n2.1 Inline code\r\nTry adding some sentences to the document that use R code to add some numbers.\r\nIdeas are:\r\nMean values of variables\r\nSpecies names\r\nThe mean flipper length of all penguins is 200.9152047.\r\nThe islands that were investigated are\r\nExtra\r\nCan you print the results of the wilcoxon test above into a nice sentence?\r\nSomething like: Male penguins have longer flippers than female penguins (Wilcoxon rank sum test, W = xyz, p = xyz).\r\nYou can access the elements of the test with $:\r\ntest$statistics for the test statistics (in this case W)\r\ntest$p.value for the p-value\r\n2.3 Chunk options\r\nNow add some chunk options to make the output nicer.\r\nStart with the chunk that produces the figure:\r\nAdd a figure caption.\r\nChange the figure size using either fig.width and fig.height or out.width\r\nKnit the document again and look at the output.\r\nNow think of global chunk options that might make sense for your document. Add the ones that you like to have to the knitr options in the setup chunk.\r\nYou can for example think of things like:\r\nShould the R code be shown in the document?\r\nShould warnings and messages be printed into the document as well?\r\nExtra\r\nTry different figure alignments\r\n\r\n4 Change YAML header\r\nIn the last step, we will add some additional YAML metadata and document options to the document.\r\nAlso in this task, you can try out the options that you find most interesting. But I will give you some basic suggestions of what to try.\r\nKnit often, to see the difference that the options make to the document.\r\nMetadata\r\nAdd today’s date to the document\r\nAdd a subtitle\r\nDocument options\r\nToday, we mostly worked with html_document output. So add some options for this document type to the YAML header. Be careful to respect the rules of indentation.\r\nOptions that might be interesting to try on your document:\r\ndf_print: set it to \"kable\" and see how the style of the table that you printed looks like\r\nAdd a table of contents. Explore the following options (start with those that seem most interesting to you):\r\ntoc\r\ntoc_depth\r\nnumber_sections\r\ntoc_float: This option is only working for html output only\r\n\r\nIf you show your code, you can try different code highlighting themes using highlight option\r\nTry a different theme, using the theme option (html only)\r\nValues you can try are “flatly”, “journal” or “united”\r\nHere you can find a list of other themes to try\r\n\r\nTry code_folding: \"hide\" (html only) to hide code and make it available via a button\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:50+02:00"
    },
    {
      "path": "download_material_blank.html",
      "title": "You can download the full material after the workshop is finished",
      "description": "For now, please use the material available from this website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:51+02:00"
    },
    {
      "path": "index.html",
      "title": "Reproducible documents with `{rmarkdown}`",
      "author": [],
      "contents": "\r\nWorkshop organization and schedule\r\n🕘 1 p.m. - 5 p.m.  📍 We will meet every day in the General meeting room of our Webex team.\r\nWorkshop Material\r\nYou can find all the workshop material on this website. On top, you can navigate to the presentation slides and the tasks for each day. At the end of each workshop day, I will upload the solutions for the tasks.\r\nTo download presentation slides in pdf format, you can use the following links:\r\n 01 - Introduction RStudio\r\nAfter the workshop is finished, you can download a zipped version of the content (slides in pdf, data and R scripts) here\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:54+02:00"
    },
    {
      "path": "LICENSE.html",
      "author": [],
      "contents": "\r\nMIT License\r\nCopyright (c) 2021 Selina Baldauf\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:55+02:00"
    },
    {
      "path": "online_resources.html",
      "title": "Additional resources",
      "description": "Below you can find a collection of helpful links to further online resources and a list of useful packages regarding the workshop topics.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGeneral\r\nR packages\r\n\r\nGeneral\r\nThere are two books that I very much recommend as reference:\r\nR Markdown: The definitive guide: Covers everything from getting started, to many different document types (html, pdf, word, xaringan presentations, websites, books, journal articles, …), to parameterized reports. You can just scroll through the table of contents of the book to see what you can do with rmarkdown and get inspiration.\r\nR markdown cookbook: Covers the basics and different document types. Is more structured by docuemnt elements than by document types. Also here, you can scroll through the table of contents to see what is possible and how to do it.\r\nA list of R Markdown books: This list contains the two above-mentioned books but also lists some other books about R Markdown that are freely available\r\nR markdown cheat sheet: Handy as a reference while working\r\nComprehensive Markdown cheat sheet: Not exactly pandoc flavoured markdown but most of the things work the same. So this page is a good and comprehensive list of markdown elements that you can use to format your texts\r\nR packages\r\nIn the table below, you can find a list of R packages with a short description and some links for further reading. The package selection is based on my personal experience and packages that I regularly use and like in combination with rmarkdown. The list is in no way complete. If you know a useful package that I missed, let me know and I can add it to the list.\r\n\r\n\r\nPackage\r\n\r\n\r\nKeywords\r\n\r\n\r\nDescription\r\n\r\n\r\nLinks\r\n\r\n\r\nxaringan\r\n\r\n\r\nPresenation\r\n\r\n\r\nProvides functionality to create nice html presentations, also provides some template documents\r\n\r\n\r\nDocumentation as presentation Documentation in R Markdown book\r\n\r\n\r\nrticles\r\n\r\n\r\nTemplates\r\n\r\n\r\nProvides templates for different journal articles\r\n\r\n\r\nwebsite\r\n\r\n\r\nofficedown\r\n\r\n\r\nMicrosoft office\r\n\r\n\r\nProvides functionality for formatting Microsoft office documents in Rmarkdown\r\n\r\n\r\nwebsite\r\n\r\n\r\nbookdown\r\n\r\n\r\nBooks\r\n\r\n\r\nFunctionality for authoring books such as the “R markdown cookbook”. Also provides functionality for cross referencing sections, figures and tables in the text\r\n\r\n\r\nwebsite\r\n\r\n\r\nkableExtra\r\n\r\n\r\nTables\r\n\r\n\r\nFunctions for formatting tables in a nice way for html and pdf\r\n\r\n\r\noverview website html tables\r\n\r\n\r\nflextable\r\n\r\n\r\nTables\r\n\r\n\r\nFormat tables for HTML, PDF and Office output, an alternative to kableExtra if you want to render a word or powerpoint document\r\n\r\n\r\nFlextable book\r\n\r\n\r\nplotly\r\n\r\n\r\nInteractive graphs\r\n\r\n\r\nCreate interactive plots, turn ggplot objects into interactive plots for html output\r\n\r\n\r\nwebsite\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-03-27T19:40:56+02:00"
    }
  ],
  "collections": []
}
